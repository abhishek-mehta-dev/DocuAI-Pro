name: CI/CD - FastAPI & Next.js

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    name: Backend (FastAPI)
    runs-on: ubuntu-latest
    env:
      FRONTEND_URL: "http://localhost:3000"
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ACCESS_TOKEN_EXPIRE_MINUTES: "180"
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Lint and Type Check (optional)
        run: |
          echo "Add flake8 or mypy commands here if needed"

      - name: Run FastAPI server test
        run: |
          cd backend

          # Start FastAPI server in background
          uvicorn app.main:app --host 127.0.0.1 --port 8000 &
          SERVER_PID=$!

          # Wait for server to start
          sleep 5

          # Test server health (if you have a health endpoint)
          echo "Testing server startup..."
          curl -f http://127.0.0.1:8000/ || echo "No root endpoint available"

          # Test the registration endpoint
          echo "Testing registration endpoint..."
          response=$(curl -s -w "%{http_code}" -X POST "http://127.0.0.1:8000/api/auth/register" \
            -H "Content-Type: application/json" \
            -d '{
              "first_name": "Johnd,
              "last_name": "Does,
              "username": "johq3oe",
              "email": "user42ewq3@mailinator.com",
              "password": "password123",
              "confirm_password": "password123",
              "user_type": "user"
            }')

          # Extract HTTP status code from response
          http_code="${response: -3}"
          response_body="${response%???}"

          echo "HTTP Status Code: $http_code"
          echo "Response Body: $response_body"

          # Clean up server process
          kill $SERVER_PID 2>/dev/null || true

          # Check if the test was successful
          if [ "$http_code" = "201" ]; then
            echo " API registration test passed successfully!"
          else
            echo " API registration test failed with HTTP code: $http_code"
            exit 1
          fi

  frontend:
    name: Frontend (Next.js)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: frontend/docuaipro/package-lock.json

      - name: Install dependencies
        working-directory: frontend/docuaipro
        run: npm ci

      - name: Lint Check
        working-directory: frontend/docuaipro
        run: npm run lint

      - name: Build Next.js App
        working-directory: frontend/docuaipro
        run: npm run build

      - name: Run Tests (if available)
        working-directory: frontend/docuaipro
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            npm test -- --passWithNoTests
          else
            echo "No tests configured, skipping..."
          fi
