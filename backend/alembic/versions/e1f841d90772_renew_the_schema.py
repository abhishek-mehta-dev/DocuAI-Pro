"""renew the schema 

Revision ID: e1f841d90772
Revises: 
Create Date: 2025-08-06 17:41:39.403517

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'e1f841d90772'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('confirm_password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Enum('USER', 'ADMIN', name='usertype', create_type=False),
    sa.Column('reset_password_code', sa.Uuid(), nullable=True),
    sa.Column('reset_password_expires', sa.Integer(), nullable=True),
    sa.Column('paypal_customer_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('paypal_payment_method_id', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('auth_provider', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('google_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_google_id'), 'users', ['google_id'], unique=True)
    op.create_index(op.f('ix_users_reset_password_code'), 'users', ['reset_password_code'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Enum('ACTIVE', 'EXPIRED', 'CANCELLED', name='status', create_type=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('plan_choice_id', sa.Integer(), nullable=True),
    sa.Column('next_payment_date', sa.Date(), nullable=True),
    sa.Column('used_free_trial', sa.Boolean(), nullable=False),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.Column('is_renew_cancelled', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_reset_password_code'), table_name='users')
    op.drop_index(op.f('ix_users_google_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
